<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="RoomBookingBtn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        6QAAAOkBVJIUSwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAO+SURBVFhHzZbZ
        TxNRGMXn3+DdWNAXNTEIYgADYhRDFI0bicEFMJK4El+giyQujQ8qWxQKAuVFoQUhiEGxyLS0BVqnLUvw
        BQEF1y7UJTH6ee/MnWlLZ0prsHqSk3buMr/Tud/cW+q/lkzeYZRVdMA6VTekN7kgTePwkq74CMPzzt0G
        RakSCtV62K59BaQrPlp/pQeOXXsIqrOV/yZARvMECw026YqPlsO31FrjGwAXHQ9PrrFAklw3RLrip9mP
        fsPMRz845twq0iSp5GqzKrNlmg2cUjcCMrkOEuV62HrXJjzF1Hv2n4mqzj1kCqf0gjPGrMLzdnIZoskF
        bxUz5wHXG++KAVJqRwwYUqSbgBt9DlD3OaHKNAd1I+9YF3dNQ6JCj0J1KMkUTlknLkD+JYXo+jJzbuXk
        Wy/MfPA/Jk2SwgHwUh2uN4D6iQuqTfMCHAc53DAI+NUOC7C/TAH7y5SiAaYXfZr3vq+Al4I0SWrDjf4a
        tHlBkqITSh69CsCNsygUB5cIoJQMgMEffN+iCoBvnKTqgm0aJ5T2zQpwvBSH0FP56wFQ0eWlNTh+8gXH
        FSIHDfL3teXtu8gUThievwoBeLHjP31Bb44HcAEHmwwJFa6BnKJL4KETrnotG38sjR+BpfGjoXYdAZ89
        20imRNRr9NouB/MmQ0K149QFSC8oBa910w8MCoMT+10Hf5EpgtymNWNLjn3CGJ8tA/+QFe2lEwKbGoZj
        i/5y3twToMkUQT7nAWGMbyxNFCZlcguKUutHPZ1OD0Tj5uFFqHs+D/VDb0HHfBbatdb3bHu07hx8wBA8
        RQUDpO2GJhMHb2DhbqGv1RwbnDfBRxHAgeBGHr4A+iB4ixltNstuHK0JPrAPiFsBO05yRZp1/Dy7ZfPt
        O4vL2PY/NcFT1IGyK0HAgDEsG0HxYBZ+MQDPKboYdsNYvPdcpYfgOVltNgPjYqDPPsMWpN7hgUZ6gX1U
        jfQiug489vukEGN11wvG8GxoGJBDt2Ks4AA6BMNrjSc1orUX4LgWSCH+iaMKgD9JEyt8HHO7mDt8koSW
        7368rVOzkQPYnS+Btlhr8fXm23QtOkx6czQ2S34rM5V751m9rFx3WVahK2EniEhW3n4ajznVYuoX861u
        a69kAPPoaI/BZBY6M7XTkFo3Noy96eaAFp1q11mjE42dICL2tOPHiVje1t8iGQCrpq1NuDk+TsnXEK0U
        gHyVVDAjTBE7V0mSjKdDptz+Qdo38MKymzStuiIycCNaG+8AbQ79t7KKigcjRlHUbxascdrKosp7AAAA
        AElFTkSuQmCC
</value>
  </data>
</root>