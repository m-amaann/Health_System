<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PatientProfileBtn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAB
        1wAAAdcBjJIIaAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAARzSURBVHhe7Zdd
        TFtlGMfxY04NmWw3xsSL3XnhjYk3S9QrEy+42oVTY4YuS9BoXEyGAhpnYqYyPyZTExmV0SZ0sBZhBfly
        3fgqbAHtRksZDDfp6McpFDraHsZwaR/ft55+nqfFM1rPaXmf5HfTPs/z9v9rz2lbxIoVK1aJZbX7Sy32
        gIcAeUpwwh6oEOJIL4vdb0SW5hu3hDjSiwybUpblI3eEONKLDDMBKctiTM0HYcrB5wPr7pW/n3X71l74
        083vp1zz8C8KETMXCYoK+GthDVy+9bxjlluNZZhxBA1CzPRFGlEBTt8d9AClY19ai2WwOYIb3xxJIyrA
        tYwfoHRueuMCyCXsF2KmL9LIBEQHEmECmAD8gIaLs/DVBcum+K5/EmY9PLofY2nCBXzzWIylP+bRPkpO
        BXTbnHDf4bqsUNU5LtqfjkCbGcKVZ2IEW8bQPkpOBejMdjTMvfDeL6Oi/enYkgLcC6vAuYMRVtUjSQJu
        qwaBc/37HO1LnJNVwO4jDbC3tgn2ndDCM0cb4YEKvI+SSQDH8RD6SJ8UOi3VOvDM+2OzsgjYVnES6vVn
        IWweALgcZ6SvB5785Gd0JqMAZwAPm4aF68uxWVkEVJ/SJwVPxNjdhc4UlABrfx8aPsoTH4s/BQV1CQTH
        LqDBozxXoxHNSLoJahR+E+TH+9HgUZ4/Jl1AIor/GtzyAlY2uAT2fKEWzUgR4E39KWx2oH0UWQRcOteD
        BqeEzP3wWFW9aEaKACnIIuC177VoeIpKdxadKSgBlApVCwB5txPDGzs7oLjyJNqfScBVd0AyTuH1yiag
        5MM6AIMaoJt8GnoIHWp4pUaF9lLSCdhzAv/EbMRTX7ZE5mUTsJO802BoTOLVGvG1HyWdgJfVRth9VCuZ
        UlVPZP7/F/BBHTz4eQN81pgcntLX3AglX5+C+6sL5CbYdPkGbDuuhofVp+ERgw6Kh9phx0Qn7LD+Cu+M
        tkKoI1nAmfPNkecoxRcN8Gi3HrZrm+GhHzVw0GAS7c8GORWgmbsZC4RROtYOBuNpOP+bFt4faYUSC95H
        eenSoGg/xTjNQf3ojGR6p1yR+ZwKaHNzaJh74XUr/mvu8U/Fvxr/C8XVDZH5vBFw6LpFtJ/yk2kaypoG
        JFM7YIvM542Aw3OTov3ZIKcCRhdvwa7JLjSQVGodN0T7s0FOBVCueANwzuPdFKZFH7o7G+RcgNJhApgA
        mQRw3hXgrWpYM38rK7cJgfFvIvDjx+6Gew/Ywu1vLIfay7zQeeAHIXa8SNisCAjamiA8VK48Bgm6MsJ+
        CLeWhYXY8SJhNy2AW1yC0PC7+AtQAnoSngogCLHjRcJuWkBgSocfrBRyKYDz+iBkOoQfrBRyKcA/3YYf
        qiQSBcBI+dMw+FYlDJVXURautMy5LQZIxT/TBf5rmeEnNRAefhs/VEkkCiAPOEUNhU6KALypkGECmAAm
        gAlgApiAmIC7ooZCRwhPRRSFhsuPkwfXRU2FCP0r3HswLqDjzd+FfwCsWLHaklVU9A/bwQHLWaRzvwAA
        AABJRU5ErkJggg==
</value>
  </data>
</root>